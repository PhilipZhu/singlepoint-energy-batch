#-------------------------#
# RECOMMENDED definitions
#-------------------------#

SOFTWARE_INI_DIR="$( dirname -- "${BASH_SOURCE[0]}" | xargs realpath)"

software_ini_usage() {
    echo "Usage: $0 [options] -S <molpro.ini> <xyz file> [<charge>] [<multiplicity>] [<frozen>] [<dummy>]" >&2
    exit 1
}

#-------------------------------------------#
# user definitions (not required by script)
#-------------------------------------------#

# Optional arguments

if [ -n "$2" ]; then
    chg="$2"
else
    chg="0"
fi

if [ -n "$3" ]; then
    mult="${3}"
    spin="$((mult-1))"
else
    spin="0"
fi

if [ -n "$4" ]; then
    frozen="$4"
else
    frozen="0"
fi

if [ ! -z "${5+x}" ]; then
    dummy="$5"
else
    dummy=""
fi

# environment variables

# software input templates
HEAD_TEMPLATE="input_template/HEAD"
TAIL_TEMPLATE="input_template/TAIL"
#HEAD_TEMPLATE="input_template/HEAD_MP2_T"
#TAIL_TEMPLATE="input_template/TAIL_MP2_T"

#-------------------------------#
# REQUIRED variable definitions
#-------------------------------#

# required definitions
export CALC_EXE="${HOME}/software/molpro/2015.1/bin/molpro -W /dev/null"
export CALC_INP_FILENAME="config.inp"
export CALC_STDOUT_FILENAME="config.stdout"

#-------------------------------#
# REQUIRED function definitions
#-------------------------------#

# split_input
#   Input  : <xyz file>
#   Output : Generates input files for ${CALC_EXE} with name format xxNNNN. Each
#            file will be renamed as ${CALC_INP_FILENAME}. Each job will run as:
#
#            ${CALC_EXE} "${CALC_INP_FILENAME}" > "${CALC_STDOUT_FILENAME}"
#
split_input() {
  local fin="$1"
  local HEAD_FN="${SOFTWARE_INI_DIR}/${HEAD_TEMPLATE}"
  local TAIL_FN="${SOFTWARE_INI_DIR}/${TAIL_TEMPLATE}"
  bash "${SOFTWARE_INI_DIR}/split_input.sh" "${fin}" "${HEAD_FN}" "${TAIL_FN}" "${chg}" "${spin}" "${frozen}" "${dummy}"
}

# isfinished
#   Invoked in each job folder.
#   Check if the job is complete.
#   Output : true/false
isfinished() {
  grep -sq " Molpro calculation terminated" "${CALC_INP_FILENAME%.*}.out" && grep -sq "SETTING E_FINAL" "${CALC_INP_FILENAME%.*}.out"
}

# lstmpfiles
#   Invoked in each job folder.
#   List all temporary files in the job folder.
#   Note  : Presence of tmp files or ${CALC_STDOUT_FILENAME} indicates another job might be running.
#           All tmp files and ${CALC_STDOUT_FILENAME} will be removed either via clean (-c) or after
#           calculation finishes. DO NOT list output files that you want to KEEP after job finishes!
lstmpfiles(){
#  ls | grep '^tmp.'
  return 0
}

# getresult
#   Invoked in each job folder.
#   Extract and convert calculation results from the output file.
#   Output : Any one-line string extracted with all relevant information.
getresult(){
  grep "SETTING E_FINAL" "${CALC_INP_FILENAME%.*}.out" | awk '{print $4}' | awk '{printf("%s %.17f kcal/mol\n", $1, ($1)*627.5096)}'
}
