#-------------------------#
# RECOMMENDED definitions
#-------------------------#

SOFTWARE_INI_DIR="$( dirname -- "${BASH_SOURCE[0]}" | xargs realpath)"

software_ini_usage() {
    echo "Usage: $0 [options] -S <g09.ini> <xyz file> [<charge>] [<multiplicity>]" >&2
    exit 1
}

#-------------------------------------------#
# user definitions (not required by script)
#-------------------------------------------#

# Optional second argument
if [ -n "$2" ]; then
    chg="$2"
else
    chg="0"
fi

# Optional third argument
if [ -n "$3" ]; then
    mult="$3"
else
    mult="1"
fi

# environment variables

# software input templates
HEAD_TEMPLATE="input_template/HEAD"
TAIL_TEMPLATE="input_template/TAIL"

#-------------------------------#
# REQUIRED variable definitions
#-------------------------------#

# required definitions
export INP_XYZ_FILENAME="input.xyz"
export CALC_EXE="g09"
export CALC_INP_FILENAME="config.com"
export CALC_STDOUT_FILENAME="config.stdout"

#-------------------------------#
# REQUIRED function definitions
#-------------------------------#

# prepare_input
#   Invoked in each job folder.
#   Output : Generates ${CALC_INP_FILENAME} as input for ${CALC_EXE} from a
#            single-frame XYZ file ${INP_XYZ_FILENAME}. Each job will run as:
#
#            ${CALC_EXE} "${CALC_INP_FILENAME}" > "${CALC_STDOUT_FILENAME}"
#
prepare_input() {
  local input_xyz_file="${INP_XYZ_FILENAME}"
  local HEAD_FN="${SOFTWARE_INI_DIR}/${HEAD_TEMPLATE}"
  local TAIL_FN="${SOFTWARE_INI_DIR}/${TAIL_TEMPLATE}"
  bash "${SOFTWARE_INI_DIR}/prepare_input.sh" "${input_xyz_file}" "${chg}" "${mult}" "${HEAD_FN}" "${TAIL_FN}" > "${CALC_INP_FILENAME}"
}

# isfinished
#   Invoked in each job folder.
#   Check if the job is complete.
#   Output : true/false
isfinished() {
[ "$(grep -s 'Normal termination' "${CALC_INP_FILENAME%.*}.log" | wc -l)" -ne 0 ]
}

# lstmpfiles
#   Invoked in each job folder.
#   List all temporary files in the job folder.
#   Note  : Presence of tmp files or ${CALC_STDOUT_FILENAME} indicates another job might be running.
#           All tmp files will be removed after calculation finishes. All tmp files and unfinished
#           ${CALC_STDOUT_FILENAME} will be removed via clean (-c). DO NOT list output files that
#           you want to KEEP after job finishes!
lstmpfiles(){
  return 0
}

# getresult
#   Invoked in each job folder.
#   Extract and convert calculation results from the output file.
#   Output : Any one-line string extracted with all relevant information.
getresult(){
  cat "${CALC_INP_FILENAME%.*}.log" | sed 's/^ //g' | tr -d '\n' | sed 's/\\/\n/g' | grep 'HF=' | sed 's/HF=//g' | awk '{printf("%s %.17f kcal/mol\n", $1, ($1)*627.5096)}'
}
