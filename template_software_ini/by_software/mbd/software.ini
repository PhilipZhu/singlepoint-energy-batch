#-------------------------#
# RECOMMENDED definitions
#-------------------------#

SOFTWARE_INI_DIR="$( dirname -- "${BASH_SOURCE[0]}" | xargs realpath)"

software_ini_usage() {
    echo "$0"' -S <mbd.ini> <input.xyz> <path_to_settings.ini>' >&2
    exit 1
}

#-------------------------------------------#
# user definitions (not required by script)
#-------------------------------------------#

# Check input arguments
[ "$#" -lt 2 ] && echo 'Do not see enough arguments. Did you run:' && software_ini_usage >&2
[ ! -f "$2" ] && echo "Error: Settings file '$2' does not exist. Did you run:" && software_ini_usage >&2

# environment variables

MBD_INI_PATH="$(realpath "${2}")"

#-------------------------------#
# REQUIRED variable definitions
#-------------------------------#

# required definitions
export INP_XYZ_FILENAME="input.xyz"
export CALC_EXE="${SOFTWARE_INI_DIR}/run_exe.sh  ${MBD_INI_PATH}"
export CALC_INP_FILENAME="input.xyz"
export CALC_STDOUT_FILENAME="mbd.stdout"

#-------------------------------#
# REQUIRED function definitions
#-------------------------------#

# prepare_input
#   Invoked in each job folder.
#   Output : Generates ${CALC_INP_FILENAME} as input for ${CALC_EXE} from a
#            single-frame XYZ file ${INP_XYZ_FILENAME}. Each job will run as:
#
#            ${CALC_EXE} "${CALC_INP_FILENAME}" > "${CALC_STDOUT_FILENAME}"
#
prepare_input() {
  [ "${INP_XYZ_FILENAME}" == "${CALC_INP_FILENAME}" ] || mv "${INP_XYZ_FILENAME}" "${CALC_INP_FILENAME}"
}

# isfinished
#   Invoked in each job folder.
#   Check if the job is complete.
#   Output : true/false
isfinished() {
[ -f "${CALC_STDOUT_FILENAME}" ] && [ "$(grep -A2 ".dat" "${CALC_STDOUT_FILENAME}" | tail -1 | wc -w)" -ge 2 ]
}

# lstmpfiles
#   Invoked in each job folder.
#   List all temporary files in the job folder.
#   Note  : Presence of tmp files or ${CALC_STDOUT_FILENAME} indicates another job might be running.
#           All tmp files will be removed after calculation finishes. All tmp files and unfinished
#           ${CALC_STDOUT_FILENAME} will be removed via clean (-c). DO NOT list output files that
#           you want to KEEP after job finishes!
lstmpfiles(){
#  ls -d *.mbd.DIR/ *.mbd.dat
  ls -d *.mbd.dat
  return 0
}

# getresult
#   Invoked in each job folder.
#   Extract and convert calculation results from the output file.
#   Output : Any one-line string extracted with all relevant information.
getresult(){
  tail -n 1 "${CALC_STDOUT_FILENAME}" | awk '{print $2}'
}
